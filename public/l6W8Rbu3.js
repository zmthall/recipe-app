import{y as d,u as h,O as w,X as m,Y as f,Z as g,$ as E,K as P,a0 as p,a1 as y,a2 as v}from"./Dbft-iZl.js";const U=()=>{const{$firebase:o}=d(),a=h(),s=o,n=async(r,t)=>{try{if(r.length>0&&t.length>0)return await v(s.auth,r,t);throw new Error("Email or Password field invalid.")}catch(e){if(console.log(e.code),e.code)switch(e.code){case"auth/invalid-email":a.error="Please enter a valid email address.";break;case"auth/invalid-credential":a.error="Email or Password field invalid.";break;default:a.error=e.message}else e instanceof Error&&(a.error=e.message)}},i=async()=>{const r=new p;try{return(await y(s.auth,r)).user}catch(t){t instanceof Error&&(a.error=t.message)}},c=()=>new Promise(r=>{if(a.authResolved)return r(!0);const t=P(()=>a.authResolved,e=>{e&&(t(),r(!0))},{immediate:!0})}),l=async()=>{try{await f(s.auth)}catch(r){r instanceof Error&&(a.error=r.message)}},u=async(r,t)=>{try{if(!(r.length>0)||!(t.length>0))throw new Error("Email or Password field missing.");const e=await g(s.auth,t);if(!e.isValid)throw e.meetsMinPasswordLength?e.containsLowercaseLetter?e.containsUppercaseLetter?e.containsNumericCharacter?e.containsNonAlphanumericCharacter?new Error("Password does not meet the required criteria."):new Error("Password must contain at least one special character."):new Error("Password must contain at least one number."):new Error("Password must contain at least one uppercase letter."):new Error("Password must contain at least one lowercase letter."):new Error("Password must be at least 8 characters long.");return await E(s.auth,r,t)}catch(e){switch(console.log(e.code),e.code){case"auth/email-already-in-use":a.error="Email is already in use.";break;default:a.error=e.message}}};return w(()=>s.auth.currentUser),{loginUserWithEmail:n,loginUserWithGoogle:i,resolvedAuth:c,registerUser:u,logoutUser:l,sendEmailVerification:m}};export{U as u};
