import{y as d,u as h,O as w,a7 as m,a8 as f,a9 as g,aa as E,K as P,ab as p,ac as y,ad as v}from"./CQV9ORKw.js";const U=()=>{const{$firebase:o}=d(),t=h(),s=o,n=async(r,a)=>{try{if(r.length>0&&a.length>0)return await v(s.auth,r,a);throw new Error("Email or Password field invalid.")}catch(e){if(console.log(e.code),e.code)switch(e.code){case"auth/invalid-email":t.error="Please enter a valid email address.";break;case"auth/invalid-credential":t.error="Email or Password field invalid.";break;default:t.error=e.message}else e instanceof Error&&(t.error=e.message)}},i=async()=>{const r=new p;try{return(await y(s.auth,r)).user}catch(a){a instanceof Error&&(t.error=a.message)}},c=()=>new Promise(r=>{if(t.authResolved)return r(!0);const a=P(()=>t.authResolved,e=>{e&&(a(),r(!0))},{immediate:!0})}),l=async()=>{try{await f(s.auth)}catch(r){r instanceof Error&&(t.error=r.message)}},u=async(r,a)=>{try{if(!(r.length>0)||!(a.length>0))throw new Error("Email or Password field missing.");const e=await g(s.auth,a);if(!e.isValid)throw e.meetsMinPasswordLength?e.containsLowercaseLetter?e.containsUppercaseLetter?e.containsNumericCharacter?e.containsNonAlphanumericCharacter?new Error("Password does not meet the required criteria."):new Error("Password must contain at least one special character."):new Error("Password must contain at least one number."):new Error("Password must contain at least one uppercase letter."):new Error("Password must contain at least one lowercase letter."):new Error("Password must be at least 8 characters long.");return await E(s.auth,r,a)}catch(e){switch(console.log(e.code),e.code){case"auth/email-already-in-use":t.error="Email is already in use.";break;default:t.error=e.message}}};return w(()=>s.auth.currentUser),{loginUserWithEmail:n,loginUserWithGoogle:i,resolvedAuth:c,registerUser:u,logoutUser:l,sendEmailVerification:m}};export{U as u};
